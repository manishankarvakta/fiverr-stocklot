version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    networks:
      - dokploy-network
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`lifestock.aamardokan.online`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/mydatabase
    networks:
      - dokploy-network
    depends_on:
      - mongo
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`apilifestock.aamardokan.online`)"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"

  mongo:
    image: mongo:6-jammy
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo_data:/data/db
    networks:
      - dokploy-network

networks:
  dokploy-network:
    external: true

volumes:
  mongo_data:
    driver: local
