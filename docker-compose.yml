version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # You donâ€™t want to expose to host directly, use expose and let Traefik route
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`lifestock.aamardokan.online`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certResolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8000"
    depends_on:
      - mongo
      - minio
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_SECURE=false
      # other backend envs
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.lifestock.aamardokan.online`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certResolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  mongo:
    image: mongo:6.0
    networks:
      - dokploy-network
    volumes:
      - mongo_data:/data/db

  minio:
    image: minio/minio:RELEASE.2025-*-*
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    networks:
      - dokploy-network
    ports:
      # MinIO console or direct access (if needed) 
      - "9001:9001"
      - "9000:9000"
    volumes:
      - minio_data:/data

volumes:
  mongo_data:
  minio_data:

networks:
  dokploy-network:
    external: true
